FROM ubuntu:20.04
ENV DEBIAN_FRONTEND=noninteractive

# deps de sistema e ferramentas
RUN apt-get update && apt-get install -y \
    ca-certificates gnupg wget curl software-properties-common lsb-release

# Adiciona a chave e os repositórios da Sovrin (canal stable / bionic)
# Obs.: apt-key é depreciado, mas em ambientes Docker efêmeros ainda é ok.
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys CE7709D068DB5E88 && \
    bash -lc 'echo "deb https://repo.sovrin.org/sdk/deb bionic stable" > /etc/apt/sources.list.d/sovrin.list' && \
    bash -lc 'echo "deb https://repo.sovrin.org/deb bionic stable" >> /etc/apt/sources.list.d/sovrin.list' && \
    apt-get update

# Instala libindy + deps nativos que ela usa em runtime
RUN apt-get install -y libindy libsodium23 libzmq5 && ldconfig

# Python 3.9 e pip
RUN apt-get install -y python3.9 python3.9-venv python3.9-dev python3-pip

# Dependências Python (use os seus requirements)
COPY requirements.txt requirements.dev.txt ./
RUN python3.9 -m pip install --upgrade pip && \
    python3.9 -m pip install --no-cache-dir -r requirements.txt -r requirements.dev.txt

# Garante que o loader encontre bibliotecas (geralmente nem precisa, mas ajuda)
ENV LD_LIBRARY_PATH=/usr/local/lib:/usr/lib/x86_64-linux-gnu:/usr/lib:$LD_LIBRARY_PATH

# Verificação rápida: falha aqui se libindy não for carregada
RUN python3.9 - <<'PY'
import ctypes
ctypes.CDLL("libindy.so")
print("libindy OK")
PY

# Copie seu código e rode os testes
COPY test ./
ENTRYPOINT ["python3.9", "integration.py"]
