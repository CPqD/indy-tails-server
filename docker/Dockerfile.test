# Stage 0: s처 para extrair a lib
FROM ghcr.io/openwallet-foundation/aries-cloudagent-python:py3.9-indy-1.16.0-0.12-lts AS indybase

# Stage 1: sua imagem real de testes
FROM ubuntu:20.04
ENV DEBIAN_FRONTEND=noninteractive

# Python + deps de runtime
RUN apt-get update && apt-get install -y python3.9 python3.9-dev python3-pip libzmq5 && rm -rf /var/lib/apt/lists/*

# Copiamos a libindy.so do stage anterior.
# Como o caminho da .so pode variar, copiamos dos dois lugares comuns (o que existir).
# Se um COPY falhar porque o arquivo n찾o existe, comente aquela linha e deixe a outra.
COPY --from=indybase /usr/lib/libindy.so /usr/lib/libindy.so
# COPY --from=indybase /usr/local/lib/libindy.so /usr/lib/libindy.so

# Garante cache de libs atualizado
RUN ldconfig && ldconfig -p | grep libindy

# Instala requirements (use os seus arquivos)
COPY requirements.txt requirements.dev.txt ./
RUN python3.9 -m pip install --upgrade pip && \
    python3.9 -m pip install --no-cache-dir -r requirements.txt -r requirements.dev.txt

# Sanidade: falha o build se a lib n찾o carregar
RUN python3.9 - <<'PY'
import ctypes, sys
try:
    ctypes.CDLL("libindy.so")
    print("libindy OK")
except OSError as e:
    sys.exit("ERRO: " + str(e))
PY

# Seu c처digo de teste
COPY test ./test
WORKDIR /test
ENTRYPOINT ["python3.9", "integration.py"]
